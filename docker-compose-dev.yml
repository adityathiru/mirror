version: '2'

services:
  elasticsearch:
    build:
      context: analytics/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    image: projectmirror/elasticsearch:1.0
    volumes:
      - ./analytics/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./analytics/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk

  logstash:
    build:
      context: analytics/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    image: projectmirror/logstash:1.0
    volumes:
      - ./analytics/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./analytics/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: analytics/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    image: projectmirror/kibana:1.0
    volumes:
      - ./analytics/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  logspout:
    build:
      context: analytics/extensions/logspout
    image: projectmirror/logspout:1.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      ROUTE_URIS: logstash://logstash:5000
      LOGSTASH_TAGS: docker-elk
    networks:
      - elk
    depends_on:
      - logstash
    restart: on-failure

  webapp:
    build:
      context: webapp/
    image: projectmirror/webapp:1.0
    volumes:
      - ./webapp:/webapp
      - ./webapp/data:/var/lib/data
    ports:
      - "8000:8000"
    networks:
      - elk
    restart: on-failure

networks:
  elk:
    driver: bridge
